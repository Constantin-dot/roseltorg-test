{"version":3,"sources":["components/header/Header.module.scss","components/radionElementsGroup/RadioElementsGroup.module.scss","pages/mainPage/MainPage.module.scss","services/mainPage-api.ts","store/reducers/mainPage-reducer.ts","store/store.ts","components/charactersList/CharactersList.tsx","components/input/Input.tsx","components/paginator/Paginator.tsx","utils/constants.ts","components/radionElementsGroup/RadioElementsGroup.tsx","components/filteringPanel/FilteringPanel.tsx","components/header/Header.tsx","pages/mainPage/presenter.ts","pages/mainPage/MainPage.tsx","pages/charachterCard/presenter.ts","pages/charachterCard/CharacterCard.tsx","pages/episodeCard/presenter.ts","pages/episodeCard/EpisodeCard.tsx","pages/locationCard/presenter.ts","pages/locationCard/LocationCard.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/charachterCard/CharacterCard.module.scss","pages/episodeCard/EpisodeCard.module.scss","pages/locationCard/LocationCard.module.scss","components/filteringPanel/FilteringPanel.module.scss","components/charactersList/CharactersList.module.scss","components/paginator/Paginator.module.scss","components/input/Input.module.scss"],"names":["module","exports","instance","axios","create","baseURL","mainPageApi","params","get","url","getAllCharacters","createAsyncThunk","_","a","rejectWithValue","getState","mainPage","page","filterParams","name","status","species","gender","response","characters","data","results","totalPages","info","pages","totalCharacters","count","error","getCharacter","character","getEpisode","episode","getLocation","location","mainPageSlice","createSlice","initialState","pageStatus","errorText","reducers","changeCharactersPage","state","action","payload","setFilteringParams","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","rootReducer","combineReducers","reducer","store","configureStore","CharactersList","React","memo","getCharacterHandler","history","useHistory","className","classes","listBlock","map","c","onClick","listItem","alignItems","alt","src","image","listItemAvatar","primary","secondary","component","variant","listItemText","color","push","id","Input","label","rest","input","input__label","input__elem","Paginator","currentPage","pageCount","changePage","itemsTotalCount","useState","pageNumber","setPageNumber","pageSetHandler","paginator","leftBlock","rightBlock","disabled","type","value","step","min","max","onChange","e","currentTarget","onBlur","onKeyPress","key","STATUSES","GENDERS","RadioElementsGroup","groupName","items","changeHandler","wrapper","aria-label","toLowerCase","i","control","indexOf","FilteringPanel","panelVisibleHandler","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","statuses","genders","filterBlock","handleSubmit","formBlock","pathOfBlock","style","margin","handleChange","subButton","edge","exitButton","HighlightOff","fontSize","Header","isFilterPanelOpen","headBlock","toolbar","usePresenter","setIsFilterPanelOpen","useSelector","changePageHandler","useCallback","useEffect","MainPage","exitButtonHandler","getEpisodeHandler","getLocationHandler","CharacterCard","cardBlock","cardContent","infoBlock","infoBlockItem","lastInfoBlockButton","EpisodeCard","air_date","LocationCard","dimension","residents","App","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StylesProvider","injectFirst","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.438c8eff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headBlock\":\"Header_headBlock__2f9Rs\",\"toolbar\":\"Header_toolbar__17lou\",\"header\":\"Header_header__2Kgzv\",\"buttonE\":\"Header_buttonE__1InUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RadioElementsGroup_wrapper__1BQPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MainPage_wrapper__4EiZq\"};","import axios from \"axios\";\r\nimport {\r\n    CharacterType,\r\n    EpisodeType,\r\n    LocationType,\r\n    QueryParamsCharactersType,\r\n    ResponseAllCharactersType,\r\n} from \"../utils/types\";\r\n\r\nconst BASE_URL = \"https://rickandmortyapi.com/api\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: BASE_URL,\r\n});\r\n\r\nexport const mainPageApi = {\r\n    getAllCharacters(params: QueryParamsCharactersType) {\r\n        return instance.get<ResponseAllCharactersType>(`/character`, {\r\n            params,\r\n        });\r\n    },\r\n    getCharacter(url: string) {\r\n        return axios.get<CharacterType>(url);\r\n    },\r\n    getEpisode(url: string) {\r\n        return axios.get<EpisodeType>(url);\r\n    },\r\n    getLocation(url: string) {\r\n        return axios.get<LocationType>(url);\r\n    },\r\n};\r\n","import { RootStateType } from \"../store\";\r\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport {\r\n    CharacterType,\r\n    StatusType,\r\n    ErrorType,\r\n    EpisodeType,\r\n    LocationType,\r\n} from \"../../utils/types\";\r\nimport { mainPageApi } from \"../../services/mainPage-api\";\r\n\r\nconst initialState = {\r\n    page: 1,\r\n    totalPages: 0,\r\n    totalCharacters: 0,\r\n    characters: [] as Array<CharacterType>,\r\n    filterParams: {\r\n        name: \"\",\r\n        status: \"\",\r\n        species: \"\",\r\n        gender: \"\",\r\n    },\r\n    character: {} as CharacterType,\r\n    episode: {} as EpisodeType,\r\n    location: {} as LocationType,\r\n    pageStatus: \"idle\" as StatusType,\r\n    errorText: \"\",\r\n};\r\n\r\nexport const getAllCharacters = createAsyncThunk<\r\n    {\r\n        characters: CharacterType[];\r\n        totalPages: number;\r\n        totalCharacters: number;\r\n    },\r\n    undefined,\r\n    { rejectValue: string; state: RootStateType }\r\n>(\"mainPage/getAllCharacters\", async (_, { rejectWithValue, getState }) => {\r\n    const {\r\n        page,\r\n        filterParams: { name, status, species, gender },\r\n    } = getState().mainPage;\r\n\r\n    try {\r\n        const response = await mainPageApi.getAllCharacters({\r\n            page,\r\n            name,\r\n            status,\r\n            species,\r\n            gender,\r\n        });\r\n\r\n        return {\r\n            characters: response.data.results,\r\n            totalPages: response.data.info.pages,\r\n            totalCharacters: response.data.info.count,\r\n        };\r\n    } catch (e) {\r\n        const error: ErrorType = e;\r\n        return rejectWithValue(\r\n            error.response ? error.response.data.error : \"unknown error\"\r\n        );\r\n    }\r\n});\r\n\r\nexport const getCharacter = createAsyncThunk<\r\n    { character: CharacterType },\r\n    string,\r\n    { rejectValue: string; state: RootStateType }\r\n>(\"mainPage/getCharacter\", async (url, { rejectWithValue }) => {\r\n    try {\r\n        const response = await mainPageApi.getCharacter(url);\r\n\r\n        return {\r\n            character: response.data,\r\n        };\r\n    } catch (e) {\r\n        const error: ErrorType = e;\r\n        return rejectWithValue(\r\n            error.response ? error.response.data.error : \"unknown error\"\r\n        );\r\n    }\r\n});\r\n\r\nexport const getEpisode = createAsyncThunk<\r\n    { episode: EpisodeType },\r\n    string,\r\n    { rejectValue: string; state: RootStateType }\r\n>(\"mainPage/getEpisode\", async (url, { rejectWithValue }) => {\r\n    try {\r\n        const response = await mainPageApi.getEpisode(url);\r\n\r\n        return {\r\n            episode: response.data,\r\n        };\r\n    } catch (e) {\r\n        const error: ErrorType = e;\r\n        return rejectWithValue(\r\n            error.response ? error.response.data.error : \"unknown error\"\r\n        );\r\n    }\r\n});\r\n\r\nexport const getLocation = createAsyncThunk<\r\n    { location: LocationType },\r\n    string,\r\n    { rejectValue: string; state: RootStateType }\r\n>(\"mainPage/getLocation\", async (url, { rejectWithValue }) => {\r\n    try {\r\n        const response = await mainPageApi.getLocation(url);\r\n\r\n        return {\r\n            location: response.data,\r\n        };\r\n    } catch (e) {\r\n        const error: ErrorType = e;\r\n        return rejectWithValue(\r\n            error.response ? error.response.data.error : \"unknown error\"\r\n        );\r\n    }\r\n});\r\n\r\nexport const mainPageSlice = createSlice({\r\n    name: \"mainPage\",\r\n    initialState,\r\n    reducers: {\r\n        changeCharactersPage: (\r\n            state,\r\n            action: PayloadAction<{ page: number }>\r\n        ) => {\r\n            state.page = action.payload.page;\r\n        },\r\n        setFilteringParams: (\r\n            state,\r\n            action: PayloadAction<{\r\n                name: string;\r\n                status: string;\r\n                species: string;\r\n                gender: string;\r\n            }>\r\n        ) => {\r\n            state.filterParams.name = action.payload.name;\r\n            state.filterParams.status = action.payload.status;\r\n            state.filterParams.species = action.payload.species;\r\n            state.filterParams.gender = action.payload.gender;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(getAllCharacters.pending, (state, action) => {\r\n                state.pageStatus = \"loading\";\r\n            })\r\n            .addCase(getAllCharacters.fulfilled, (state, action) => {\r\n                state.characters = action.payload.characters;\r\n                state.totalPages = action.payload.totalPages;\r\n                state.totalCharacters = action.payload.totalCharacters;\r\n                state.pageStatus = \"succeeded\";\r\n            })\r\n            .addCase(getAllCharacters.rejected, (state, action) => {\r\n                if (action.payload) {\r\n                    state.pageStatus = \"failed\";\r\n                    state.errorText = action.payload;\r\n                }\r\n            })\r\n            .addCase(getCharacter.pending, (state, action) => {\r\n                state.pageStatus = \"loading\";\r\n            })\r\n            .addCase(getCharacter.fulfilled, (state, action) => {\r\n                state.character = action.payload.character;\r\n                state.pageStatus = \"succeeded\";\r\n            })\r\n            .addCase(getCharacter.rejected, (state, action) => {\r\n                if (action.payload) {\r\n                    state.pageStatus = \"failed\";\r\n                    state.errorText = action.payload;\r\n                }\r\n            })\r\n            .addCase(getEpisode.pending, (state, action) => {\r\n                state.pageStatus = \"loading\";\r\n            })\r\n            .addCase(getEpisode.fulfilled, (state, action) => {\r\n                state.episode = action.payload.episode;\r\n                state.pageStatus = \"succeeded\";\r\n            })\r\n            .addCase(getEpisode.rejected, (state, action) => {\r\n                if (action.payload) {\r\n                    state.pageStatus = \"failed\";\r\n                    state.errorText = action.payload;\r\n                }\r\n            })\r\n            .addCase(getLocation.pending, (state, action) => {\r\n                state.pageStatus = \"loading\";\r\n            })\r\n            .addCase(getLocation.fulfilled, (state, action) => {\r\n                state.location = action.payload.location;\r\n                state.pageStatus = \"succeeded\";\r\n            })\r\n            .addCase(getLocation.rejected, (state, action) => {\r\n                if (action.payload) {\r\n                    state.pageStatus = \"failed\";\r\n                    state.errorText = action.payload;\r\n                }\r\n            });\r\n    },\r\n});\r\n\r\nexport const { changeCharactersPage, setFilteringParams } =\r\n    mainPageSlice.actions;\r\n\r\nexport type MainPageStateType = typeof initialState;\r\nexport type MainPagefilterParamsType = typeof initialState.filterParams;\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { mainPageSlice } from \"./reducers/mainPage-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    mainPage: mainPageSlice.reducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n});\r\n\r\nexport type RootStateType = ReturnType<typeof store.getState>;\r\nexport type AppDispatchType = typeof store.dispatch;\r\n","import List from \"@material-ui/core/List/List\";\r\nimport React from \"react\";\r\nimport classes from \"./CharactersList.module.scss\";\r\nimport { CharacterType } from \"../../utils/types\";\r\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport Divider from \"@material-ui/core/Divider/Divider\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ntype CharactersListPropsType = {\r\n    characters: CharacterType[];\r\n    getCharacterHandler: (url: string) => void;\r\n};\r\n\r\nconst CharactersList: React.FC<CharactersListPropsType> = React.memo(\r\n    ({ characters, getCharacterHandler }) => {\r\n        const history = useHistory();\r\n\r\n        const charactersListHandler = (url: string) => {\r\n            getCharacterHandler(url);\r\n            history.push(`/roseltorg-test/character`);\r\n        };\r\n\r\n        return (\r\n            <List className={classes.listBlock}>\r\n                {characters.map((c) => (\r\n                    <div key={c.id} onClick={() => {}}>\r\n                        <ListItem\r\n                            className={classes.listItem}\r\n                            alignItems=\"flex-start\"\r\n                        >\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    alt={c.name}\r\n                                    src={c.image}\r\n                                    className={classes.listItemAvatar}\r\n                                />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={c.name}\r\n                                secondary={\r\n                                    <>\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            variant=\"body2\"\r\n                                            className={classes.listItemText}\r\n                                            color=\"textPrimary\"\r\n                                        >\r\n                                            {`${c.species} ${c.status}`}\r\n                                        </Typography>\r\n                                        {` -Location: ${c.location.name}`}\r\n                                    </>\r\n                                }\r\n                            />\r\n\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                    charactersListHandler(c.url);\r\n                                }}\r\n                            >\r\n                                open this card\r\n                            </Button>\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" component=\"li\" />\r\n                    </div>\r\n                ))}\r\n            </List>\r\n        );\r\n    }\r\n);\r\n\r\nexport default CharactersList;\r\n","import React, { InputHTMLAttributes } from \"react\";\r\nimport classes from \"./Input.module.scss\";\r\n\r\ninterface PropsType extends InputHTMLAttributes<HTMLInputElement> {\r\n    label?: string;\r\n}\r\n\r\nexport const Input = React.memo(({ label, ...rest }: PropsType) => {\r\n    return (\r\n        <div className={classes.input}>\r\n            <p className={classes.input__label}>{label}</p>\r\n            <input className={classes.input__elem} {...rest} />\r\n        </div>\r\n    );\r\n});\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport classes from \"./Paginator.module.scss\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport { Input } from \"../input/Input\";\r\n\r\ntype PaginatorPropsType = {\r\n    currentPage: number;\r\n    itemsTotalCount: number;\r\n    pageCount: number;\r\n    changePage: (page: number) => void;\r\n};\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = React.memo(\r\n    ({ currentPage, pageCount, changePage, itemsTotalCount }) => {\r\n        const [pageNumber, setPageNumber] = useState(currentPage);\r\n\r\n        const onePreviousPage = () => {\r\n            changePage(pageNumber - 1);\r\n            setPageNumber(pageNumber - 1);\r\n        };\r\n        const pageChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n            setPageNumber(+e.currentTarget.value);\r\n        };\r\n\r\n        const pageSetHandler = () => {\r\n            if (pageNumber < 1) {\r\n                changePage(1);\r\n                setPageNumber(1);\r\n            } else if (pageNumber > pageCount) {\r\n                changePage(pageCount);\r\n                setPageNumber(pageCount);\r\n            } else {\r\n                changePage(pageNumber);\r\n            }\r\n        };\r\n        const oneNextPage = () => {\r\n            changePage(pageNumber + 1);\r\n            setPageNumber(pageNumber + 1);\r\n        };\r\n\r\n        const onKeyPressHandler = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n            if (e.key === \"Enter\") {\r\n                pageSetHandler();\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className={classes.paginator}>\r\n                <div className={classes.leftBlock}>\r\n                    <p>{`Total pages: ${pageCount}. Total characters: ${itemsTotalCount}.`}</p>\r\n                </div>\r\n                <div className={classes.rightBlock}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={onePreviousPage}\r\n                        disabled={currentPage < 2}\r\n                    >\r\n                        Prev\r\n                    </Button>\r\n                    <span>{`Page: `}</span>\r\n                    <Input\r\n                        type={\"number\"}\r\n                        value={currentPage}\r\n                        step={1}\r\n                        min={1}\r\n                        max={pageCount}\r\n                        onChange={pageChangeHandler}\r\n                        onBlur={pageSetHandler}\r\n                        onKeyPress={onKeyPressHandler}\r\n                    />\r\n                    <span>of {pageCount}</span>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={oneNextPage}\r\n                        disabled={currentPage === pageCount}\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n","export const STATUSES = [\"Alive\", \"Dead\", \"Unknown\"];\r\n\r\nexport const GENDERS = [\"Female\", \"Male\", \"Genderless\", \"Unknown\"];\r\n","import React, { ChangeEvent } from \"react\";\r\nimport classes from \"./RadioElementsGroup.module.scss\";\r\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup/RadioGroup\";\r\n\r\ntype PropsType = {\r\n    groupName: string;\r\n    items: string[];\r\n    changeHandler: (e: ChangeEvent<any>) => void;\r\n};\r\n\r\nconst RadioElementsGroup: React.FC<PropsType> = ({\r\n    groupName,\r\n    items,\r\n    changeHandler,\r\n}) => {\r\n    return (\r\n        <FormControl component=\"fieldset\" className={classes.wrapper}>\r\n            <FormLabel component=\"legend\">{groupName}</FormLabel>\r\n            <RadioGroup\r\n                aria-label={groupName.toLowerCase()}\r\n                name={groupName.toLowerCase()}\r\n                onChange={changeHandler}\r\n            >\r\n                {items.map((i) => (\r\n                    <FormControlLabel\r\n                        key={i.indexOf(i)}\r\n                        value={i.toLowerCase()}\r\n                        control={<Radio />}\r\n                        label={i}\r\n                    />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default RadioElementsGroup;\r\n","import Button from \"@material-ui/core/Button/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport { HighlightOff } from \"@material-ui/icons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    changeCharactersPage,\r\n    getAllCharacters,\r\n    setFilteringParams,\r\n} from \"../../store/reducers/mainPage-reducer\";\r\nimport { GENDERS, STATUSES } from \"../../utils/constants\";\r\nimport RadioElementsGroup from \"../radionElementsGroup/RadioElementsGroup\";\r\nimport classes from \"./FilteringPanel.module.scss\";\r\n\r\ntype FilteringPanelPropsType = {\r\n    panelVisibleHandler: () => void;\r\n};\r\n\r\nexport const FilteringPanel: React.FC<FilteringPanelPropsType> = ({\r\n    panelVisibleHandler,\r\n}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const buttonHandler = () => {\r\n        dispatch(setFilteringParams(formik.values));\r\n        dispatch(changeCharactersPage({ page: 1 }));\r\n        panelVisibleHandler();\r\n        dispatch(getAllCharacters());\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            status: \"\",\r\n            species: \"\",\r\n            gender: \"\",\r\n        },\r\n        onSubmit: (values) => {\r\n            buttonHandler();\r\n        },\r\n    });\r\n\r\n    let statuses = STATUSES;\r\n    let genders = GENDERS;\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.filterBlock}>\r\n                <form\r\n                    onSubmit={formik.handleSubmit}\r\n                    className={classes.formBlock}\r\n                >\r\n                    <div className={classes.pathOfBlock}>\r\n                        <TextField\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            label=\"Name\"\r\n                            style={{ margin: \"30px\" }}\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                        <RadioElementsGroup\r\n                            groupName={\"Status\"}\r\n                            items={statuses}\r\n                            changeHandler={formik.handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={classes.pathOfBlock}>\r\n                        <TextField\r\n                            id=\"species\"\r\n                            name=\"species\"\r\n                            label=\"Species\"\r\n                            style={{ margin: \"30px\" }}\r\n                            value={formik.values.species}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                        <RadioElementsGroup\r\n                            groupName={\"Gender\"}\r\n                            items={genders}\r\n                            changeHandler={formik.handleChange}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={classes.subButton}\r\n                    >\r\n                        Filter characters\r\n                    </Button>\r\n                </form>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    edge=\"start\"\r\n                    aria-label=\"menu\"\r\n                    onClick={panelVisibleHandler}\r\n                    className={classes.exitButton}\r\n                >\r\n                    <HighlightOff fontSize=\"large\" />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./Header.module.scss\";\r\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport { FilteringPanel } from \"../filteringPanel/FilteringPanel\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\n\r\ntype HeaderPropsType = {\r\n    isFilterPanelOpen: boolean;\r\n    panelVisibleHandler: () => void;\r\n};\r\n\r\nconst Header: React.FC<HeaderPropsType> = ({\r\n    isFilterPanelOpen,\r\n    panelVisibleHandler,\r\n}) => {\r\n    return (\r\n        <AppBar className={classes.headBlock}>\r\n            <Toolbar className={classes.toolbar}>\r\n                <Typography variant=\"h6\">\r\n                    The univers of Rick and Morty\r\n                </Typography>\r\n                {isFilterPanelOpen ? (\r\n                    <FilteringPanel panelVisibleHandler={panelVisibleHandler} />\r\n                ) : (\r\n                    <Button variant=\"contained\" onClick={panelVisibleHandler}>\r\n                        open filtering panel\r\n                    </Button>\r\n                )}\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    changeCharactersPage,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    MainPageStateType,\r\n} from \"../../store/reducers/mainPage-reducer\";\r\nimport { RootStateType } from \"../../store/store\";\r\n\r\nconst usePresenter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isFilterPanelOpen, setIsFilterPanelOpen] = useState<boolean>(false);\r\n\r\n    const { page, totalPages, totalCharacters, characters } = useSelector<\r\n        RootStateType,\r\n        MainPageStateType\r\n    >((state) => state.mainPage);\r\n\r\n    const changePageHandler = useCallback((page: number) => {\r\n        dispatch(changeCharactersPage({ page }));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const panelVisibleHandler = useCallback(() => {\r\n        setIsFilterPanelOpen(!isFilterPanelOpen);\r\n    }, [isFilterPanelOpen]);\r\n\r\n    const getCharacterHandler = useCallback((url: string) => {\r\n        dispatch(getCharacter(url));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCharacters());\r\n        // eslint-disable-next-line\r\n    }, [page]);\r\n\r\n    return {\r\n        characters,\r\n        page,\r\n        totalPages,\r\n        totalCharacters,\r\n        changePageHandler,\r\n        isFilterPanelOpen,\r\n        panelVisibleHandler,\r\n        getCharacterHandler,\r\n    };\r\n};\r\n\r\nexport default usePresenter;\r\n","import React from \"react\";\r\nimport CharactersList from \"../../components/charactersList/CharactersList\";\r\nimport { Paginator } from \"../../components/paginator/Paginator\";\r\nimport Header from \"../../components/header/Header\";\r\nimport classes from \"./MainPage.module.scss\";\r\nimport usePresenter from \"./presenter\";\r\n\r\nconst MainPage: React.FC = React.memo(() => {\r\n    const {\r\n        characters,\r\n        page,\r\n        totalPages,\r\n        totalCharacters,\r\n        changePageHandler,\r\n        isFilterPanelOpen,\r\n        panelVisibleHandler,\r\n        getCharacterHandler,\r\n    } = usePresenter();\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Header\r\n                isFilterPanelOpen={isFilterPanelOpen}\r\n                panelVisibleHandler={panelVisibleHandler}\r\n            />\r\n            <CharactersList\r\n                characters={characters}\r\n                getCharacterHandler={getCharacterHandler}\r\n            />\r\n            <Paginator\r\n                currentPage={page}\r\n                itemsTotalCount={totalCharacters}\r\n                pageCount={totalPages}\r\n                changePage={changePageHandler}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MainPage;\r\n","import { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getEpisode, getLocation } from \"../../store/reducers/mainPage-reducer\";\r\nimport { RootStateType } from \"../../store/store\";\r\n\r\nconst usePresenter = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const { character } = useSelector<RootStateType, any>(\r\n        (state) => state.mainPage\r\n    );\r\n\r\n    const exitButtonHandler = () => {\r\n        history.push(`/roseltorg-test`);\r\n    };\r\n\r\n    const getEpisodeHandler = useCallback((url: string) => {\r\n        dispatch(getEpisode(url));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const getLocationHandler = useCallback((url: string) => {\r\n        dispatch(getLocation(url));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return {\r\n        character,\r\n        exitButtonHandler,\r\n        getEpisodeHandler,\r\n        getLocationHandler,\r\n    };\r\n};\r\n\r\nexport default usePresenter;\r\n","import Button from \"@material-ui/core/Button/Button\";\r\nimport Divider from \"@material-ui/core/Divider/Divider\";\r\nimport List from \"@material-ui/core/List/List\";\r\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from \"./CharacterCard.module.scss\";\r\nimport usePresenter from \"./presenter\";\r\n\r\nconst CharacterCard: React.FC = () => {\r\n    const {\r\n        character,\r\n        exitButtonHandler,\r\n        getEpisodeHandler,\r\n        getLocationHandler,\r\n    } = usePresenter();\r\n\r\n    const history = useHistory();\r\n\r\n    const characterCardToEpisodeHandler = (url: string) => {\r\n        getEpisodeHandler(url);\r\n        history.push(`/roseltorg-test/episode`);\r\n    };\r\n\r\n    const characterCardToLocationHandler = (url: string) => {\r\n        getLocationHandler(url);\r\n        history.push(`/roseltorg-test/location`);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {character.image ? (\r\n                <div className={classes.cardBlock}>\r\n                    <div className={classes.cardContent}>\r\n                        <img alt={\"Character avatar\"} src={character.image} />\r\n                        <div className={classes.infoBlock}>\r\n                            <div\r\n                                className={classes.infoBlockItem}\r\n                            >{`Name: ${character.name}`}</div>\r\n                            <div\r\n                                className={classes.infoBlockItem}\r\n                            >{`Status: ${character.status}`}</div>\r\n                            <div\r\n                                className={classes.infoBlockItem}\r\n                            >{`Species: ${character.species}`}</div>\r\n                            <div\r\n                                className={classes.infoBlockItem}\r\n                            >{`Gender: ${character.gender}`}</div>\r\n                            <div>\r\n                                {`Location: ${character.location.name}`}\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    className={classes.lastInfoBlockButton}\r\n                                    onClick={() => {\r\n                                        characterCardToLocationHandler(\r\n                                            character.location.url\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    open this location\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <List className={classes.listBlock}>\r\n                        {character.episode.map((c: any) => (\r\n                            <div key={c.indexOf(c)}>\r\n                                <ListItem\r\n                                    className={classes.listItem}\r\n                                    alignItems=\"flex-start\"\r\n                                >\r\n                                    <ListItemText primary={c} />\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        className={classes.lastInfoBlockButton}\r\n                                        onClick={() => {\r\n                                            characterCardToEpisodeHandler(c);\r\n                                        }}\r\n                                    >\r\n                                        open this episode\r\n                                    </Button>\r\n                                </ListItem>\r\n\r\n                                <Divider />\r\n                            </div>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            ) : (\r\n                <></>\r\n            )}\r\n\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={exitButtonHandler}\r\n                className={classes.exitButton}\r\n            >\r\n                back to character list\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCharacter } from \"../../store/reducers/mainPage-reducer\";\r\nimport { RootStateType } from \"../../store/store\";\r\n\r\nconst usePresenter = () => {\r\n    const dispatch = useDispatch();\r\n    const { episode } = useSelector<RootStateType, any>(\r\n        (state) => state.mainPage\r\n    );\r\n\r\n    const getCharacterHandler = useCallback((url: string) => {\r\n        dispatch(getCharacter(url));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return {\r\n        episode,\r\n        getCharacterHandler,\r\n    };\r\n};\r\n\r\nexport default usePresenter;\r\n","import Button from \"@material-ui/core/Button/Button\";\r\nimport Divider from \"@material-ui/core/Divider/Divider\";\r\nimport List from \"@material-ui/core/List/List\";\r\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from \"./EpisodeCard.module.scss\";\r\nimport usePresenter from \"./presenter\";\r\n\r\nconst EpisodeCard: React.FC = () => {\r\n    const { episode, getCharacterHandler } = usePresenter();\r\n\r\n    const history = useHistory();\r\n\r\n    const episodCardToCharacterHandler = (url: string) => {\r\n        getCharacterHandler(url);\r\n        history.push(`/roseltorg-test/character`);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {episode.name ? (\r\n                <div className={classes.cardBlock}>\r\n                    <div className={classes.infoBlock}>\r\n                        <div\r\n                            className={classes.infoBlockItem}\r\n                        >{`Name: ${episode.name}`}</div>\r\n                        <div\r\n                            className={classes.infoBlockItem}\r\n                        >{`Air date: ${episode.air_date}`}</div>\r\n                        <div\r\n                            className={classes.infoBlockItem}\r\n                        >{`Episode: ${episode.episode}`}</div>\r\n                    </div>\r\n\r\n                    <List className={classes.listBlock}>\r\n                        {episode.characters.map((c: any) => (\r\n                            <div key={c.indexOf(c)}>\r\n                                <ListItem\r\n                                    className={classes.listItem}\r\n                                    alignItems=\"flex-start\"\r\n                                >\r\n                                    <ListItemText primary={c} />\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        className={classes.lastInfoBlockButton}\r\n                                        onClick={() => {\r\n                                            episodCardToCharacterHandler(c);\r\n                                        }}\r\n                                    >\r\n                                        open this character\r\n                                    </Button>\r\n                                </ListItem>\r\n\r\n                                <Divider />\r\n                            </div>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EpisodeCard;\r\n","import { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCharacter } from \"../../store/reducers/mainPage-reducer\";\r\nimport { RootStateType } from \"../../store/store\";\r\n\r\nconst usePresenter = () => {\r\n    const dispatch = useDispatch();\r\n    const { location } = useSelector<RootStateType, any>(\r\n        (state) => state.mainPage\r\n    );\r\n\r\n    const getCharacterHandler = useCallback((url: string) => {\r\n        dispatch(getCharacter(url));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return {\r\n        location,\r\n        getCharacterHandler,\r\n    };\r\n};\r\n\r\nexport default usePresenter;\r\n","import Button from \"@material-ui/core/Button/Button\";\r\nimport Divider from \"@material-ui/core/Divider/Divider\";\r\nimport List from \"@material-ui/core/List/List\";\r\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from \"./LocationCard.module.scss\";\r\nimport usePresenter from \"./presenter\";\r\n\r\nconst LocationCard: React.FC = () => {\r\n    const { location, getCharacterHandler } = usePresenter();\r\n\r\n    const history = useHistory();\r\n\r\n    const episodCardToCharacterHandler = (url: string) => {\r\n        getCharacterHandler(url);\r\n        history.push(`/roseltorg-test/character`);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {location.name ? (\r\n                <div className={classes.cardBlock}>\r\n                    <div className={classes.infoBlock}>\r\n                        <div\r\n                            className={classes.infoBlockItem}\r\n                        >{`Name: ${location.name}`}</div>\r\n                        <div\r\n                            className={classes.infoBlockItem}\r\n                        >{`Type: ${location.type}`}</div>\r\n                        <div\r\n                            className={classes.infoBlockItem}\r\n                        >{`Dimension: ${location.dimension}`}</div>\r\n                    </div>\r\n\r\n                    <List className={classes.listBlock}>\r\n                        {location.residents.map((c: any) => (\r\n                            <div key={c.indexOf(c)}>\r\n                                <ListItem\r\n                                    className={classes.listItem}\r\n                                    alignItems=\"flex-start\"\r\n                                >\r\n                                    <ListItemText primary={c} />\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        className={classes.lastInfoBlockButton}\r\n                                        onClick={() => {\r\n                                            episodCardToCharacterHandler(c);\r\n                                        }}\r\n                                    >\r\n                                        open this character\r\n                                    </Button>\r\n                                </ListItem>\r\n\r\n                                <Divider />\r\n                            </div>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationCard;\r\n","import MainPage from \"./pages/mainPage/MainPage\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CharacterCard from \"./pages/charachterCard/CharacterCard\";\nimport EpisodeCard from \"./pages/episodeCard/EpisodeCard\";\nimport LocationCard from \"./pages/locationCard/LocationCard\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route\n                    path={\"/roseltorg-test\"}\n                    exact\n                    render={() => <MainPage />}\n                />\n                <Route\n                    path={\"/roseltorg-test/character\"}\n                    exact\n                    render={() => <CharacterCard />}\n                />\n                <Route\n                    path={\"/roseltorg-test/episode\"}\n                    exact\n                    render={() => <EpisodeCard />}\n                />\n                <Route\n                    path={\"/roseltorg-test/location\"}\n                    exact\n                    render={() => <LocationCard />}\n                />\n                <Route path={\"*\"} render={() => <div>404 NOT FOUND</div>} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StylesProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { store } from \"./store/store\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <StylesProvider injectFirst>\n        <BrowserRouter>\n            <Provider store={store}>\n                <React.StrictMode>\n                    <App />\n                </React.StrictMode>\n            </Provider>\n        </BrowserRouter>\n    </StylesProvider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CharacterCard_wrapper__s5yED\",\"cardBlock\":\"CharacterCard_cardBlock__2NUMN\",\"cardContent\":\"CharacterCard_cardContent__2uklc\",\"infoBlock\":\"CharacterCard_infoBlock__2nvWN\",\"infoBlockItem\":\"CharacterCard_infoBlockItem__inX1p\",\"lastInfoBlockButton\":\"CharacterCard_lastInfoBlockButton__1avIO\",\"listBlock\":\"CharacterCard_listBlock__2reNN\",\"listItem\":\"CharacterCard_listItem__3vasx\",\"exitButton\":\"CharacterCard_exitButton__I6TSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EpisodeCard_wrapper__5a8Y7\",\"cardBlock\":\"EpisodeCard_cardBlock__3jUl1\",\"infoBlock\":\"EpisodeCard_infoBlock__UE-wT\",\"infoBlockItem\":\"EpisodeCard_infoBlockItem__1a8aR\",\"lastInfoBlockButton\":\"EpisodeCard_lastInfoBlockButton__3bPCT\",\"listBlock\":\"EpisodeCard_listBlock__Qx8gs\",\"listItem\":\"EpisodeCard_listItem__Vj8Uv\",\"exitButton\":\"EpisodeCard_exitButton__1uT_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LocationCard_wrapper__29DiG\",\"cardBlock\":\"LocationCard_cardBlock__1IYI_\",\"infoBlock\":\"LocationCard_infoBlock__3zmDU\",\"infoBlockItem\":\"LocationCard_infoBlockItem__Y6IlM\",\"lastInfoBlockButton\":\"LocationCard_lastInfoBlockButton__2CYLZ\",\"listBlock\":\"LocationCard_listBlock__3qVrI\",\"listItem\":\"LocationCard_listItem__1BDnB\",\"exitButton\":\"LocationCard_exitButton__2s0xA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FilteringPanel_wrapper__gTiYw\",\"filterBlock\":\"FilteringPanel_filterBlock__2b0rX\",\"formBlock\":\"FilteringPanel_formBlock__1RvMx\",\"pathOfBlock\":\"FilteringPanel_pathOfBlock__3E_5M\",\"subButton\":\"FilteringPanel_subButton__36kbO\",\"exitButton\":\"FilteringPanel_exitButton__3jwAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listBlock\":\"CharactersList_listBlock__20QuO\",\"listItem\":\"CharactersList_listItem__3X2rj\",\"listItemAvatar\":\"CharactersList_listItemAvatar__2kSPC\",\"listItemText\":\"CharactersList_listItemText__39pt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__rgIFs\",\"leftBlock\":\"Paginator_leftBlock__30BiF\",\"rightBlock\":\"Paginator_rightBlock__37N5T\",\"button\":\"Paginator_button__2kCXt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__iDTRF\",\"input__label\":\"Input_input__label__3orHb\",\"input__elem\":\"Input_input__elem__3zBrS\"};"],"sourceRoot":""}